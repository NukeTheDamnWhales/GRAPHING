#!/usr/bin/env bash

docker exec -i --user postgres my-webapp-db-1 createdb mydb

docker exec -i --user postgres my-webapp-db-1 psql mydb -a <<__END
create user my_role password 'lacinia';
grant create on schema public to my_role;
__END

docker exec -i my-webapp-db-1 psql -Umy_role mydb -a <<__END
drop table if exists user_to_token;
drop table if exists users;
drop table if exists auths;
drop table if exists posts;
drop table if exists comments;
drop table if exists boards;

CREATE OR REPLACE FUNCTION maintain_updated_at()
RETURNS TRIGGER AS \$\$
BEGIN
   NEW.updated_at = now();
   RETURN NEW;
END;
\$\$ language 'plpgsql';

create table boards (
  board_id int generated by default as identity primary key,
  title text not null,
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp);

create trigger user_updated_at before update
on boards for each row execute procedure
maintain_updated_at();

create table users (
  user_id int generated by default as identity primary key,
  name text not null,
  username text not null,
  password text not null,
  accesslevel text not null,
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp,
  CONSTRAINT username_unique UNIQUE (username));

create trigger user_updated_at before update
on users for each row execute procedure
maintain_updated_at();

create table posts (
  post_id int generated by default as identity primary key,
  title text not null,
  body text not null,
  user_id int references users(user_id),
  board_id int references boards(board_id),
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp);

create trigger posts_updated_at before update
on posts for each row execute procedure
maintain_updated_at();

create table comments (
  comment_id int generated by default as identity primary key,
  body text not null,
  post_id int references posts(post_id),
  user_id int references users(user_id),
  parent_id int references comments(comment_id),
  created_at timestamp not null default current_timestamp,
  updated_at timestamp not null default current_timestamp);

create trigger comments_updated_at before update
on comments for each row execute procedure
maintain_updated_at();

insert into boards (board_id, title) values
  (0, 'recipes'),
  (1, 'pickling tips and tricks');

alter table boards alter column board_id restart with 10;

insert into users (user_id, name, username, accesslevel, password) values
  (0, 'my name', 'orgenborgen', 'regular', 'abc'),
  (1, 'louise theroux', 'documentarydude', 'regular', 'abc'),
  (2, 'another one', 'evenmore!', 'regular', 'abc');

alter table users alter column user_id restart with 10;

insert into posts (post_id, title, body, user_id, board_id) values
  (0, 'yes', ' This simple refrigerator pickle brine is made with water, vinegar, sugar, sea salt, garlic cloves, and fresh dill. You can adjust the ratios and add other ingredients (such as coriander seeds, peppercorns, or bay leaves) to suit your taste.To cut cucumber spears, simply cut the cuke in half lengthwise and then cut the halves into quarters. If youre happy with the spear size, stop there. If youd like them smaller, cut the spears in half lengthwise again.Of course, this refrigerator dill pickle recipe would also work well with cucumber slices instead of spears.', 0, 0),
  (1, 'this', 'whats up', 1, 0),
  (2, 'works', 'whats goin on', 2, 0);

alter table posts alter column post_id restart with 10;

insert into comments (comment_id, body, post_id, user_id, parent_id) values
  (0, 'says a lot of things', 0, 0, NULL),
  (1, 'a feud!', 0, 0, 1);

alter table comments alter column comment_id restart with 10;

__END
