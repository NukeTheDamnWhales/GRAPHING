(undo-tree-save-format-version . 1)
"af3088a63aa063812334f09bdf23d2663f8755cf"
[nil nil nil nil (25759 14450 907288 0) 0 nil]
([nil nil ((1 . 3) (t 25759 14416 814142 427000)) nil (25759 14450 907287 0) 0 nil])
([nil nil ((2 . 10)) nil (25759 14450 907287 0) 0 nil])
([nil nil ((#(" " 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -9) (undo-tree-id12 . -1) 10) nil (25759 14450 907286 0) 0 nil])
([nil nil ((9 . 12)) nil (25759 14450 907285 0) 0 nil])
([nil nil ((12 . 14)) nil (25759 14450 907284 0) 0 nil])
([nil nil ((13 . 21)) nil (25759 14450 907284 0) 0 nil])
([nil nil ((21 . 25)) nil (25759 14450 907283 0) 0 nil])
([nil nil ((25 . 26)) nil (25759 14450 907283 0) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -25) (undo-tree-id11 . -1) 26) nil (25759 14450 907282 0) 0 nil])
([nil nil ((25 . 27)) nil (25759 14450 907281 0) 0 nil])
([nil nil ((26 . 33)) nil (25759 14450 907281 0) 0 nil])
([nil nil ((33 . 36)) nil (25759 14450 907280 0) 0 nil])
([nil nil ((#("c" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -26) (undo-tree-id1 . -1) (#("l" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -27) (undo-tree-id2 . -1) (#("o" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -28) (undo-tree-id3 . -1) (#("j" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -29) (undo-tree-id4 . -1) (#("u" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -30) (undo-tree-id5 . -1) (#("r" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -31) (undo-tree-id6 . -1) (#("e" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -32) (undo-tree-id7 . -1) (#("-" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -33) (undo-tree-id8 . -1) (#("m" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -34) (undo-tree-id9 . -1) (#("y" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -35) (undo-tree-id10 . -1) 36) nil (25759 14450 907279 0) 0 nil])
([nil nil ((26 . 29)) nil (25759 14450 907274 0) 0 nil])
([nil nil ((26 . 42) (#("my-" 0 3 (ws-butler-chg chg fontified nil)) . -26) (26 . 29) (#("my-webapp.schema" 0 16 (ws-butler-chg chg fontified nil)) . -26) (26 . 42) (#("my-" 0 3 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -26) (undo-tree-id0 . -3) 29) nil (25759 14450 907272 0) 0 nil])
([nil nil ((42 . 48)) nil (25759 14450 907263 0) 0 nil])
([nil nil ((51 . 52) 48) nil (25759 14450 907259 0) 0 nil])
([nil nil ((49 . 53) (t 25759 14450 909009 939000)) nil (25759 14458 849231 0) 0 nil])
([nil nil ((53 . 55)) nil (25759 14458 849231 0) 0 nil])
([nil nil ((54 . 75)) nil (25759 14458 849230 0) 0 nil])
([nil nil ((75 . 89)) nil (25759 14458 849227 0) 0 nil])
([nil nil ((92 . 94) (t 25759 14458 850650 450000)) nil (25759 14462 477961 0) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals nil ws-butler-chg chg help-echo cider--help-echo fontified t)) . -92) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("
" 0 1 (cider-locals nil ws-butler-chg chg help-echo cider--help-echo fontified t)) . -93) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 94) nil (25759 14462 477954 0) 0 nil])
([nil nil ((90 . 94) (t 25759 14462 479608 129000)) nil (25759 15407 648478 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 122 . 123) (nil fontified nil 94 . 123) (94 . 123)) nil (25759 15407 648474 0) 0 nil])
([nil nil ((#("   " 0 3 (cider-locals nil help-echo cider--help-echo fontified t)) . -94) 123 (t 25759 15407 650649 870000)) nil (25759 15408 685803 0) 0 nil])
([nil nil ((#("[clojure.repl :refer :all]" 0 1 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo fontified t) 1 14 (cider-locals nil help-echo cider--help-echo fontified t) 14 15 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 15 20 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 20 21 (cider-locals nil help-echo cider--help-echo fontified t) 21 22 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 22 25 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 25 26 (face (rainbow-delimiters-depth-3-face) cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 94) (undo-tree-id635 . -26) (undo-tree-id636 . -26) (undo-tree-id637 . -24) (undo-tree-id638 . -26) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . 26) (undo-tree-id649 . -1) (undo-tree-id650 . 1) (undo-tree-id651 . -26) (t 25759 15408 687456 131000)) nil (25759 15425 543914 0) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -90) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -91) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -92) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -93) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) 94) nil (25759 15425 543900 0) 0 nil])
([nil nil ((93 . 94) (t 25759 15425 545511 312000)) nil (25759 15770 517355 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 196 . 197) (nil fontified nil 94 . 197) (94 . 197)) nil (25759 15770 517354 0) 0 nil])
([nil nil ((197 . 198)) nil (25759 15770 517350 0) 0 nil])
([nil nil ((122 . 124) (t 25759 15770 519151 597000)) nil (25759 18120 648583 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 517 . 518) (nil fontified nil 124 . 518) (124 . 518)) nil (25759 18120 648579 0) 0 nil])
([nil nil ((90 . 94) (t 25759 18120 650570 380000)) nil (25759 18138 986873 0) 0 nil])
([nil nil ((94 . 96)) nil (25759 18138 986872 0) 0 nil])
([nil nil ((95 . 115)) nil (25759 18138 986868 0) 0 nil])
([nil nil ((97 . 98) (t 25759 18138 988635 382000)) nil (25759 18143 393583 0) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -97) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 98 (t 25759 18143 395394 283000)) nil (25759 18144 455499 0) 0 nil])
([nil nil ((97 . 98)) nil (25759 18148 451204 0) 0 nil])
([nil nil ((118 . 121) (t 25759 18144 457194 245000)) nil (25759 18163 107805 0) 0 nil] [nil nil ((117 . 121) (t 25759 18144 457194 245000)) ((#("
   " 0 4 (cider-locals nil ws-butler-chg chg help-echo cider--help-echo fontified t)) . 117) (undo-tree-id67 . -4) (undo-tree-id68 . -1)) (25759 18148 450838 0) 0 nil])
([nil nil ((#("  " 0 1 (cider-locals nil ws-butler-chg delete help-echo cider--help-echo fontified nil) 1 2 (cider-locals nil ws-butler-chg chg help-echo cider--help-echo fontified nil)) . 118) (undo-tree-id71 . -2) (#("
" 0 1 (cider-locals nil ws-butler-chg chg help-echo cider--help-echo fontified t)) . -118) 121) nil (25759 18163 107804 0) 0 nil])
nil
([nil nil ((118 . 121)) nil (25759 18163 107803 0) 0 nil])
([nil nil ((121 . 123)) nil (25759 18163 107803 0) 0 nil])
([nil nil ((122 . 130)) nil (25759 18163 107802 0) 0 nil])
([nil nil ((#("IMPORT " 0 6 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t) 6 7 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -123) (undo-tree-id70 . -7) 130) nil (25759 18163 107802 0) 0 nil])
([nil nil ((123 . 130)) nil (25759 18163 107800 0) 0 nil])
([nil nil ((130 . 132)) nil (25759 18163 107800 0) 0 nil])
([nil nil ((131 . 146)) nil (25759 18163 107800 0) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -145) (undo-tree-id69 . -1) 146) nil (25759 18163 107798 0) 0 nil])
([nil nil ((145 . 158)) nil (25759 18163 107786 0) 0 nil])
([nil nil ((662 . 663) (616 . 617) (t 25759 18163 109950 841000)) nil (25759 18191 191253 0) 0 nil])
([nil nil ((617 . 620)) nil (25759 18191 191252 0) 0 nil])
([nil nil ((665 . 672)) nil (25759 18191 191252 0) 0 nil])
([nil nil ((672 . 677)) nil (25759 18191 191251 0) 0 nil])
([nil nil ((#("o" 0 1 (cider-locals ("query-string") ws-butler-chg chg fontified t help-echo cider--help-echo)) . -676) (undo-tree-id73 . -1) 677) nil (25759 18191 191251 0) 0 nil])
([nil nil ((676 . 678)) nil (25759 18191 191250 0) 0 nil])
([nil nil ((#("o" 0 1 (cider-locals ("query-string") ws-butler-chg chg fontified t help-echo cider--help-echo)) . -677) (undo-tree-id72 . -1) 678) nil (25759 18191 191249 0) 0 nil])
([nil nil ((677 . 680)) nil (25762 5349 816747 0) 0 nil])
([nil nil ((90 . 94) (t 25759 18191 193306 625000)) nil (25762 5368 430907 0) 0 nil] [nil nil ((50 . 51) (t 25759 18191 193306 625000)) ((#("f" 0 1 (fontified t help-echo cider--help-echo ws-butler-chg chg cider-locals nil)) . 50)) (25762 5349 816366 0) 0 nil] [nil nil ((192 . 193) (t 25759 18191 193306 625000)) ((#("q" 0 1 (fontified t help-echo cider--help-echo cider-locals nil ws-butler-chg chg)) . 192) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) (25761 61964 667538 0) 0 nil] [nil nil ((510 . 512) (t 25759 18191 193306 625000)) ((#("xo" 0 2 (fontified t help-echo cider--help-echo ws-butler-chg chg cider-locals ("m" "node"))) . 510) (undo-tree-id1 . -2)) (25761 2805 332 0) 0 nil] [nil nil ((510 . 512) (t 25759 18191 193306 625000)) ((#("()" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("m" "node") face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("m" "node") face (rainbow-delimiters-depth-5-face))) . 510) (undo-tree-id0 . -1)) (25761 2803 383343 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 130 . 131) (nil help-echo cider--help-echo 130 . 131) (nil fontified nil 130 . 131) (nil help-echo cider--help-echo 122 . 130) (nil fontified nil 122 . 130) (nil help-echo cider--help-echo 120 . 122) (nil fontified nil 120 . 122) (nil help-echo cider--help-echo 119 . 120) (nil fontified nil 119 . 120) (nil help-echo cider--help-echo 95 . 119) (nil fontified nil 95 . 119) (nil help-echo cider--help-echo 94 . 95) (nil fontified nil 94 . 95) (94 . 131)) nil (25762 5368 430906 0) 0 nil])
nil
nil
nil
nil
([nil nil ((118 . 128)) nil (25762 5368 430905 0) 0 nil])
([nil nil ((#("lacinia" 0 7 (ws-butler-chg chg fontified t help-echo cider--help-echo cider-locals nil)) . -133) (undo-tree-id6 . -7) 140) nil (25762 5368 430904 0) 0 nil])
([nil nil ((133 . 135)) nil (25762 5368 430903 0) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t help-echo cider--help-echo cider-locals nil)) . -133) (undo-tree-id4 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t help-echo cider--help-echo cider-locals nil)) . -134) (undo-tree-id5 . -1) 135) nil (25762 5368 430902 0) 0 nil])
([nil nil ((133 . 135)) nil (25762 5368 430890 0) 0 nil])
([nil nil ((136 . 140) (t 25762 5368 434727 581000)) nil (25762 5389 443293 0) 0 nil])
([nil nil ((140 . 142)) nil (25762 5389 443292 0) 0 nil])
([nil nil ((141 . 162)) nil (25762 5389 443291 0) 0 nil])
([nil nil ((162 . 163)) nil (25762 5389 443290 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals nil)) . -162) (undo-tree-id8 . -1) 163) nil (25762 5389 443289 0) 0 nil])
([nil nil ((162 . 168)) nil (25762 5389 443288 0) 0 nil])
([nil nil ((168 . 170)) nil (25762 5389 443287 0) 0 nil])
([nil nil ((169 . 176)) nil (25762 5389 443286 0) 0 nil])
([nil nil ((169 . 179) (#("browse-" 0 7 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals nil)) . -169) (undo-tree-id7 . -7) 176) nil (25762 5389 443285 0) 0 nil])
([nil nil ((136 . 140)) nil (25762 5389 443276 0) 0 nil])
([nil nil ((140 . 142)) nil (25762 5389 443275 0) 0 nil])
([nil nil ((141 . 162)) nil (25762 5389 443274 0) 0 nil])
([nil nil ((162 . 166)) nil (25762 5389 443269 0) 0 nil])
([nil nil ((805 . 806) (t 25762 5389 445879 735000)) nil (25762 5459 217366 0) 0 nil])
([nil nil ((806 . 808)) nil (25762 5459 217365 0) 0 nil])
([nil nil ((807 . 813)) nil (25762 5459 217364 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals nil)) . -812) (undo-tree-id16 . -1) 813) nil (25762 5459 217363 0) 0 nil])
([nil nil ((812 . 825)) nil (25762 5459 217362 0) 0 nil])
([nil nil ((826 . 828)) nil (25762 5459 217362 0) 0 nil])
([nil nil ((828 . 830)) nil (25762 5459 217361 0) 0 nil])
([nil nil ((829 . 839)) nil (25762 5459 217360 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals nil face font-lock-function-name-face)) . -838) (undo-tree-id15 . -1) 839) nil (25762 5459 217360 0) 0 nil])
([nil nil ((838 . 845)) nil (25762 5459 217358 0) 0 nil])
([nil nil ((845 . 846)) nil (25762 5459 217357 0) 0 nil])
([nil nil ((846 . 849)) nil (25762 5459 217357 0) 0 nil])
([nil nil ((849 . 851)) nil (25762 5459 217356 0) 0 nil])
([nil nil ((850 . 851)) nil (25762 5459 217355 0) 0 nil])
([nil nil ((852 . 855)) nil (25762 5459 217355 0) 0 nil])
([nil nil ((855 . 857)) nil (25762 5459 217354 0) 0 nil])
([nil nil ((856 . 860)) nil (25762 5459 217353 0) 0 nil])
([nil nil ((860 . 862)) nil (25762 5459 217353 0) 0 nil])
([nil nil ((861 . 866)) nil (25762 5459 217352 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("sere"))) . -864) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("serer"))) . -865) (undo-tree-id14 . -1) 866) nil (25762 5459 217351 0) 0 nil])
([nil nil ((864 . 868)) nil (25762 5459 217350 0) 0 nil])
([nil nil ((868 . 870)) nil (25762 5459 217349 0) 0 nil])
([nil nil ((869 . 872)) nil (25762 5459 217348 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . -871) (undo-tree-id12 . -1) 872) nil (25762 5459 217347 0) 0 nil])
([nil nil ((872 . 873)) nil (25762 5459 217346 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . -872) (undo-tree-id11 . -1) 873) nil (25762 5459 217345 0) 0 nil])
([nil nil ((871 . 872)) nil (25762 5459 217344 0) 0 nil])
([nil nil ((872 . 874)) nil (25762 5459 217343 0) 0 nil])
([nil nil ((873 . 874)) nil (25762 5459 217343 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . -873) (undo-tree-id10 . -1) 874) nil (25762 5459 217342 0) 0 nil])
([nil nil ((873 . 894)) nil (25762 5459 217341 0) 0 nil])
([nil nil ((894 . 898)) nil (25762 5459 217340 0) 0 nil])
([nil nil ((898 . 902)) nil (25762 5459 217339 0) 0 nil])
([nil nil ((903 . 923)) nil (25762 5459 217338 0) 0 nil])
([nil nil ((923 . 925)) nil (25762 5459 217338 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil ws-butler-chg delete help-echo cider--help-echo cider-locals ("server") face (rainbow-delimiters-depth-5-face))) . 923) (#("(" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server") face (rainbow-delimiters-depth-5-face))) . -923) (undo-tree-id9 . -1) 924) nil (25762 5459 217336 0) 0 nil])
([nil nil ((923 . 941)) nil (25762 5459 217330 0) 0 nil])
([nil nil ((941 . 961)) nil (25762 5459 217329 0) 0 nil])
([nil nil ((961 . 971)) nil (25762 5459 217329 0) 0 nil])
([nil nil ((973 . 978)) nil (25762 5459 217328 0) 0 nil])
([nil nil ((978 . 980)) nil (25762 5459 217327 0) 0 nil])
([nil nil ((979 . 990)) nil (25762 5459 217327 0) 0 nil])
([nil nil ((990 . 992)) nil (25762 5459 217326 0) 0 nil])
([nil nil ((991 . 1012)) nil (25762 5459 217325 0) 0 nil])
([nil nil ((1012 . 1016)) nil (25762 5459 217325 0) 0 nil])
([nil nil ((1018 . 1023)) nil (25762 5459 217324 0) 0 nil])
([nil nil ((1023 . 1029)) nil (25762 5459 217323 0) 0 nil])
([nil nil ((1031 . 1032)) nil (25762 5459 217320 0) 0 nil])
([nil nil ((1031 . 1033) (t 25762 5459 219271 952000)) nil (25762 5487 339589 0) 0 nil])
([nil nil ((1033 . 1035)) nil (25762 5487 339587 0) 0 nil])
([nil nil ((1034 . 1044)) nil (25762 5487 339587 0) 0 nil])
([nil nil ((1044 . 1047)) nil (25762 5487 339586 0) 0 nil])
([nil nil ((1047 . 1049)) nil (25762 5487 339585 0) 0 nil])
([nil nil ((1049 . 1052)) nil (25762 5487 339584 0) 0 nil])
([nil nil ((1052 . 1054)) nil (25762 5487 339583 0) 0 nil])
([nil nil ((1053 . 1055)) nil (25762 5487 339582 0) 0 nil])
([nil nil ((1055 . 1059)) nil (25762 5487 339581 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . -1058) (undo-tree-id17 . -1) 1059) nil (25762 5487 339580 0) 0 nil])
([nil nil ((1058 . 1079)) nil (25762 5487 339572 0) 0 nil])
([nil nil ((1079 . 1089)) nil (25762 5487 339571 0) 0 nil])
([nil nil ((1090 . 1093)) nil (25762 5487 339570 0) 0 nil])
([nil nil ((1093 . 1101)) nil (25762 5487 339569 0) 0 nil])
([nil nil ((1102 . 1104)) nil (25762 5487 339568 0) 0 nil])
([nil nil ((1104 . 1106)) nil (25762 5487 339567 0) 0 nil])
([nil nil ((1105 . 1114)) nil (25762 5487 339566 0) 0 nil])
([nil nil ((1114 . 1117)) nil (25762 5487 339566 0) 0 nil])
([nil nil ((1117 . 1119)) nil (25762 5487 339565 0) 0 nil])
([nil nil ((1119 . 1122)) nil (25762 5487 339564 0) 0 nil])
([nil nil ((1122 . 1124)) nil (25762 5487 339563 0) 0 nil])
([nil nil ((1123 . 1144)) nil (25762 5487 339562 0) 0 nil])
([nil nil ((1144 . 1158)) nil (25762 5487 742437 0) 0 nil])
([nil nil ((1159 . 1162)) nil (25762 5491 212885 0) 0 nil] [nil nil ((1158 . 1177)) ((#("
                  " 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server")) 1 19 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . 1158) (undo-tree-id19 . -19) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -19) (undo-tree-id23 . -19) (undo-tree-id24 . -19) (undo-tree-id25 . -19) (undo-tree-id26 . -19) (undo-tree-id27 . -19) (undo-tree-id28 . -19) (undo-tree-id29 . -19) (undo-tree-id30 . -19) (undo-tree-id31 . -19) (undo-tree-id32 . -19) (undo-tree-id33 . -19) (undo-tree-id34 . -19) (undo-tree-id35 . -19) (undo-tree-id36 . -19) (undo-tree-id37 . -19) (undo-tree-id38 . -19) (undo-tree-id39 . -19) (undo-tree-id40 . -19) (undo-tree-id41 . -19) (undo-tree-id42 . -19) (undo-tree-id43 . -19) (undo-tree-id44 . -19) (undo-tree-id45 . -19) (undo-tree-id46 . -19) (undo-tree-id47 . -19) (undo-tree-id48 . -19) (undo-tree-id49 . -19) (undo-tree-id50 . -19) (undo-tree-id51 . -19) (undo-tree-id52 . -19) (undo-tree-id53 . -19) (undo-tree-id54 . -19) (undo-tree-id55 . -19) (undo-tree-id56 . -19) (undo-tree-id57 . -19) (undo-tree-id58 . -19) (undo-tree-id59 . -19)) (25762 5487 339761 0) 0 nil])
([nil nil ((1162 . 1168)) nil (25762 5491 212884 0) 0 nil])
([nil nil ((1177 . 1178)) ((#(":" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . 1177) (undo-tree-id18 . -1)) (25762 5487 339557 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server") face clojure-keyword-face)) . -1167) (undo-tree-id60 . -1) 1168) nil (25762 5491 212882 0) 0 nil])
nil
([nil nil ((1167 . 1170)) nil (25762 5491 212870 0) 0 nil])
([nil nil ((1031 . 1033) (t 25762 5491 215208 905000)) nil (25762 5536 75700 0) 0 nil])
([nil nil ((1033 . 1035)) nil (25762 5536 75699 0) 0 nil])
([nil nil ((1034 . 1050)) nil (25762 5536 75698 0) 0 nil])
([nil nil ((1050 . 1053)) nil (25762 5536 75697 0) 0 nil])
([nil nil ((1053 . 1055)) nil (25762 5536 75696 0) 0 nil])
([nil nil ((1054 . 1060)) nil (25762 5536 75695 0) 0 nil])
([nil nil ((1061 . 1064)) nil (25762 5536 75694 0) 0 nil])
([nil nil ((1064 . 1066)) nil (25762 5536 75693 0) 0 nil])
([nil nil ((1065 . 1082)) nil (25762 5536 76183 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . -1081) (undo-tree-id65 . -1) 1082) nil (25762 5540 412279 0) 0 nil] [nil nil ((1082 . 1096)) ((#("
             " 0 14 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server"))) . 1082) (undo-tree-id61 . -14) (undo-tree-id62 . -1)) (25762 5536 75689 0) 0 nil])
([nil nil ((1082 . 1085)) nil (25762 5540 412278 0) 0 nil])
nil
([nil nil ((1085 . 1087)) nil (25762 5540 412277 0) 0 nil])
([nil nil ((1087 . 1091)) nil (25762 5540 412276 0) 0 nil])
([nil nil ((1088 . 1089)) nil (25762 5540 412275 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server" "server") face font-lock-comment-face)) . -1087) (undo-tree-id63 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg help-echo cider--help-echo cider-locals ("server" "server") face font-lock-comment-face)) . -1088) (undo-tree-id64 . -1) 1089) nil (25762 5540 412273 0) 0 nil])
([nil nil ((1087 . 1088)) nil (25762 5540 412262 0) 0 nil])
([nil nil ((#("  " 0 2 (help-echo cider--help-echo fontified t cider-locals ("server" "server"))) . 1089) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (t 25762 5540 414545 418000)) nil (25762 5542 887285 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("server" "server"))) . -1088) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 1089) nil (25762 23619 156776 0) 0 nil])
([nil nil ((22 . 23) (t 25762 23619 828339 522000)) nil (25762 23641 271749 0) 0 nil] [nil nil ((#("   [io.pedestal.http :as http]" 0 3 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 4 21 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 21 22 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 22 24 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 24 29 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 29 30 (face (rainbow-delimiters-depth-3-face) cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 137) (undo-tree-id95 . -30) (t 25762 5542 889211 98000)) ((137 . 167)) (25762 23618 704343 0) 0 nil])
([nil nil ((22 . 24)) nil (25762 23641 271748 0) 0 nil])
([nil nil ((#("
" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -136) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 137) ((136 . 137) (t 25762 23614 425139 385000)) (25762 23614 421670 0) 0 nil])
([nil nil ((22 . 25) 23) nil (25762 23641 271747 0) 0 nil])
nil
([nil nil ((26 . 47)) nil (25762 23641 271746 0) 0 nil])
([nil nil ((47 . 58)) nil (25762 23641 271745 0) 0 nil])
([nil nil ((58 . 66)) nil (25762 23641 271741 0) 0 nil])
([nil nil ((#("[my-webapp.schema :as s]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 1 18 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 18 19 (face clojure-keyword-face fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 19 21 (face clojure-keyword-face fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 21 23 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 23 24 (face (rainbow-delimiters-depth-3-face) fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . 71) (undo-tree-id444 . 24) (undo-tree-id445 . -1) (undo-tree-id446 . 1) (undo-tree-id447 . -24) (undo-tree-id448 . -24) (t 25762 23641 274355 440000)) nil (25762 23733 642733 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . 71)) nil (25762 23733 642730 0) 0 nil])
([nil nil ((#("   " 0 1 (ws-butler-chg delete fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 1 3 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . -71)) nil (25762 23733 642729 0) 0 nil])
([nil nil ((#("[com.walmartlabs.lacinia.pedestal2 :as lp]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 1 35 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 35 36 (face clojure-keyword-face fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 36 38 (face clojure-keyword-face fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 38 41 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 41 42 (face (rainbow-delimiters-depth-3-face) fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . 112) (undo-tree-id440 . 42) (undo-tree-id441 . -1) (undo-tree-id442 . 1) (undo-tree-id443 . -42)) nil (25762 23733 642728 0) 0 nil])
([nil nil ((#("[io.pedestal.http :as http]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 1 18 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 18 19 (face clojure-keyword-face fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 19 21 (face clojure-keyword-face fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 21 26 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 26 27 (face (rainbow-delimiters-depth-3-face) fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . 116) (undo-tree-id435 . 27) (undo-tree-id436 . -1) (undo-tree-id437 . 1) (undo-tree-id438 . -27) (undo-tree-id439 . -27)) nil (25762 23733 642726 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . -111) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . -112) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 113) nil (25762 23733 642721 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . -108) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) 109) nil (25762 23733 642677 0) 0 nil])
([nil nil ((#("     " 0 1 (ws-butler-chg delete fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 1 2 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 2 3 (ws-butler-chg delete fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 3 5 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo)) . 108) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -5) (undo-tree-id174 . -5) (undo-tree-id175 . -5) (undo-tree-id176 . -5) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2)) nil (25762 23733 642632 0) 0 nil])
([nil nil ((180 . 184) (t 25762 23733 645750 59000)) nil (25762 23747 554572 0) 0 nil])
([nil nil ((184 . 186)) nil (25762 23747 554571 0) 0 nil])
([nil nil ((185 . 186)) nil (25762 23747 554571 0) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -185) (undo-tree-id450 . -1) 186) nil (25762 23747 554570 0) 0 nil])
([nil nil ((185 . 190)) nil (25762 23747 554568 0) 0 nil])
([nil nil ((185 . 201) (#("my-we" 0 5 (ws-butler-chg chg fontified nil)) . -185) (185 . 190) (#("my-webapp.system" 0 16 (ws-butler-chg chg fontified nil)) . -185) (185 . 201) (#("my-we" 0 5 (ws-butler-chg chg fontified t)) . -185) (undo-tree-id449 . -5) 190) nil (25762 23747 554567 0) 0 nil])
([nil nil ((201 . 212)) nil (25762 23747 554555 0) 0 nil])
([nil nil ((#("(def schema (s/load-schema))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals nil help-echo cider--help-echo) 1 4 (face font-lock-keyword-face fontified t cider-locals nil help-echo cider--help-echo) 4 5 (fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 5 11 (face font-lock-variable-name-face fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 11 12 (fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 12 13 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 13 14 (face font-lock-type-face fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 14 26 (fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("s/load-schema") help-echo cider--help-echo) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals ("s/load-schema") help-echo cider--help-echo)) . 259) (undo-tree-id754 . -13) (undo-tree-id755 . -26) (undo-tree-id756 . -28) (undo-tree-id757 . -28) (undo-tree-id758 . -28) (undo-tree-id759 . -28) (undo-tree-id760 . -28) (undo-tree-id761 . -28) (undo-tree-id762 . -28) (undo-tree-id763 . -28) (undo-tree-id764 . -28) (undo-tree-id765 . -28) (undo-tree-id766 . -28) (undo-tree-id767 . -28) (undo-tree-id768 . -28) (undo-tree-id769 . -28) (undo-tree-id770 . -28) (undo-tree-id771 . -28) (undo-tree-id772 . -28) (undo-tree-id773 . -28) (undo-tree-id774 . -28) (undo-tree-id775 . 28) (undo-tree-id776 . -1) (undo-tree-id777 . 1) (undo-tree-id778 . -28) (undo-tree-id779 . -28) (undo-tree-id780 . -28) (undo-tree-id781 . -28) (undo-tree-id782 . -28) (undo-tree-id783 . -28) (undo-tree-id784 . -28) (undo-tree-id785 . -28) (undo-tree-id786 . -28) (undo-tree-id787 . -28) (undo-tree-id788 . -28) (undo-tree-id789 . -28) (undo-tree-id790 . -28) (undo-tree-id791 . -28) (undo-tree-id792 . -28) (undo-tree-id793 . -28) (undo-tree-id794 . -28) (undo-tree-id795 . -28) (undo-tree-id796 . -28) (undo-tree-id797 . -28) (undo-tree-id798 . -28) (undo-tree-id799 . -28) (undo-tree-id800 . -28) (undo-tree-id801 . -28) (undo-tree-id802 . -28) (undo-tree-id803 . -28) (undo-tree-id804 . -28) (undo-tree-id805 . -28) (undo-tree-id806 . -28) (undo-tree-id807 . -28) (undo-tree-id808 . -28) (t 25762 23747 556996 841000)) nil (25762 23750 683269 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t cider-locals nil help-echo cider--help-echo)) . -257) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("
" 0 1 (fontified t cider-locals nil help-echo cider--help-echo)) . -258) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 259) nil (25762 23750 683235 0) 0 nil])
([nil nil ((654 . 656) (t 25762 23750 685941 396000)) nil (25762 23761 318952 0) 0 nil])
([nil nil ((655 . 657)) nil (25762 23761 318951 0) 0 nil])
([nil nil ((656 . 671)) nil (25762 23761 318951 0) 0 nil])
([nil nil ((671 . 673)) nil (25762 23761 318950 0) 0 nil])
([nil nil ((672 . 682)) nil (25762 23761 318949 0) 0 nil])
([nil nil ((672 . 689) (#("system/n" 0 8 (ws-butler-chg chg fontified nil)) . -672) (672 . 680) (#("system/new-system" 0 17 (ws-butler-chg chg fontified nil)) . -672) (672 . 689) (#("system/new" 0 6 (face font-lock-type-face ws-butler-chg chg fontified t) 6 10 (ws-butler-chg chg fontified t)) . -672) (undo-tree-id809 . -10) (undo-tree-id810 . -10) (undo-tree-id811 . -10) (undo-tree-id812 . -10) (undo-tree-id813 . -10) (undo-tree-id814 . -10) (undo-tree-id815 . -10) (undo-tree-id816 . -10) (undo-tree-id817 . -10) (undo-tree-id818 . -10) (undo-tree-id819 . -10) (undo-tree-id820 . -10) (undo-tree-id821 . -10) (undo-tree-id822 . -10) (undo-tree-id823 . -10) (undo-tree-id824 . -10) (undo-tree-id825 . -10) (undo-tree-id826 . -10) (undo-tree-id827 . -10) (undo-tree-id828 . -10) (undo-tree-id829 . -10) (undo-tree-id830 . -8) (undo-tree-id831 . -10) (undo-tree-id832 . -10) (undo-tree-id833 . -10) (undo-tree-id834 . -10) (undo-tree-id835 . -10) (undo-tree-id836 . -10) (undo-tree-id837 . -10) (undo-tree-id838 . -10) (undo-tree-id839 . -10) (undo-tree-id840 . -10) 682) nil (25762 23761 318945 0) 0 nil])
([nil nil ((724 . 725) (t 25762 23761 321652 251000)) nil (25762 23790 919172 0) 0 nil])
([nil nil ((#("'" 0 1 (ws-butler-chg chg fontified t cider-locals ("query-string") help-echo cider--help-echo)) . -724) (undo-tree-id846 . -1) 725) nil (25762 23790 919172 0) 0 nil])
([nil nil ((723 . 727) (#(" " 0 1 (fontified t cider-locals ("query-string") help-echo cider--help-echo)) . 723) (undo-tree-id845 . -1) 724) nil (25762 23790 919170 0) 0 nil])
([nil nil ((724 . 728) (#("   " 0 3 (ws-butler-chg chg fontified t cider-locals ("query-string") help-echo cider--help-echo)) . 724) (undo-tree-id844 . -3) 727) nil (25762 23790 919169 0) 0 nil])
([nil nil ((723 . 730)) nil (25762 23790 919168 0) 0 nil])
([nil nil ((724 . 730) (#("system" 0 6 (ws-butler-chg chg fontified nil)) . -724) (724 . 730) (#("system" 0 6 (ws-butler-chg chg fontified t cider-locals ("query-string") help-echo cider--help-echo)) . -724) (undo-tree-id843 . -6) 730) nil (25762 23790 919167 0) 0 nil])
([nil nil ((731 . 738)) nil (25762 23790 919166 0) 0 nil])
([nil nil ((#("a" 0 1 (face clojure-keyword-face ws-butler-chg chg fontified t cider-locals ("query-string") help-echo cider--help-echo)) . -736) (undo-tree-id841 . -1) (#("m" 0 1 (face clojure-keyword-face ws-butler-chg chg fontified t cider-locals ("query-string") help-echo cider--help-echo)) . -737) (undo-tree-id842 . -1) 738) nil (25762 23790 919165 0) 0 nil])
([nil nil ((736 . 747)) nil (25762 23790 919158 0) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg fontified t cider-locals ("query-string") help-echo cider--help-echo)) . -749) (747 . 748)) nil (25762 23790 919157 0) 0 nil])
([nil nil ((748 . 755)) nil (25762 23790 919153 0) 0 nil])
([nil nil ((731 . 737) 738 (t 25762 23790 921939 603000)) nil (25762 23793 853324 0) 0 nil])
([nil nil ((754 . 760) 761) nil (25762 23793 853323 0) 0 nil])
([nil nil ((768 . 774) 781) nil (25762 23793 853318 0) 0 nil])
([nil nil ((#("schema " 0 7 (fontified t cider-locals ("query-string") help-echo cider--help-echo)) . -791) (undo-tree-id847 . -7) (undo-tree-id848 . -6) (undo-tree-id849 . -6) (undo-tree-id850 . -6) (undo-tree-id851 . -6) (undo-tree-id852 . -6) (undo-tree-id853 . -6) (undo-tree-id854 . -6) (undo-tree-id855 . -6) (undo-tree-id856 . -6) (undo-tree-id857 . -6) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -6) (undo-tree-id861 . -6) (undo-tree-id862 . -6) (undo-tree-id863 . -6) (undo-tree-id864 . -6) (undo-tree-id865 . -6) (undo-tree-id866 . -6) (undo-tree-id867 . -6) (undo-tree-id868 . -6) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -6) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) (undo-tree-id883 . -6) (undo-tree-id884 . -6) (undo-tree-id885 . -6) (undo-tree-id886 . -6) (undo-tree-id887 . -6) (undo-tree-id888 . -6) (undo-tree-id889 . -6) (undo-tree-id890 . -6) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) (undo-tree-id897 . -7) (undo-tree-id898 . -7) (undo-tree-id899 . -7) (undo-tree-id900 . -7) (undo-tree-id901 . -7) (undo-tree-id902 . -7) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) (undo-tree-id906 . -7) (undo-tree-id907 . -7) (undo-tree-id908 . -7) (undo-tree-id909 . -7) (undo-tree-id910 . -7) (undo-tree-id911 . -7) (undo-tree-id912 . -7) (undo-tree-id913 . -7) (undo-tree-id914 . -7) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -7) (undo-tree-id918 . -7) (undo-tree-id919 . -7) (undo-tree-id920 . -7) (undo-tree-id921 . -7) (undo-tree-id922 . -7) (undo-tree-id923 . -7) (undo-tree-id924 . -7) 798 (t 25762 23793 856121 612000)) nil (25762 23800 530780 0) 0 nil])
([nil nil ((#("(defonce server nil)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals nil help-echo cider--help-echo) 1 8 (face font-lock-keyword-face fontified t cider-locals nil help-echo cider--help-echo) 8 9 (fontified t cider-locals nil help-echo cider--help-echo) 9 15 (face font-lock-variable-name-face fontified t cider-locals nil help-echo cider--help-echo) 15 16 (fontified t cider-locals nil help-echo cider--help-echo) 16 19 (face font-lock-constant-face fontified t cider-locals nil help-echo cider--help-echo) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals nil help-echo cider--help-echo)) . 831) (undo-tree-id1284 . 20) (undo-tree-id1285 . -1) (undo-tree-id1286 . 1) (undo-tree-id1287 . -20) (undo-tree-id1288 . -20) (undo-tree-id1289 . -20) (undo-tree-id1290 . -20) (undo-tree-id1291 . -20) (undo-tree-id1292 . -20) (undo-tree-id1293 . -20) (undo-tree-id1294 . -20) (undo-tree-id1295 . -20) (undo-tree-id1296 . -20) (undo-tree-id1297 . -20) (undo-tree-id1298 . -20) (undo-tree-id1299 . -20) (t 25762 23800 533517 916000)) nil (25762 23812 870948 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t cider-locals nil help-echo cider--help-echo)) . -829) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (#("
" 0 1 (fontified t cider-locals nil help-echo cider--help-echo)) . -830) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) 831) nil (25762 23812 870932 0) 0 nil])
([nil nil ((#("(defn start-server
  [_]
  (let [server (-> (lp/default-service schema nil)
                   http/create-server
                   http/start)]
    (browse-url \"http://localhost:8888/ide\")
    server))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals nil help-echo cider--help-echo) 1 5 (face font-lock-keyword-face fontified t cider-locals nil help-echo cider--help-echo) 5 6 (fontified t cider-locals ("_") help-echo cider--help-echo) 6 18 (face font-lock-function-name-face fontified t cider-locals ("_") help-echo cider--help-echo) 18 21 (fontified t cider-locals ("_") help-echo cider--help-echo) 21 22 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("_") help-echo cider--help-echo) 22 23 (fontified t cider-locals ("_") help-echo cider--help-echo) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("_") help-echo cider--help-echo) 24 27 (fontified t cider-locals ("_") help-echo cider--help-echo) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("_") help-echo cider--help-echo) 28 31 (face font-lock-keyword-face fontified t cider-locals ("_") help-echo cider--help-echo) 31 32 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 33 40 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 40 41 (face (rainbow-delimiters-depth-4-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 41 43 (face font-lock-keyword-face fontified t cider-locals ("_" "server") help-echo cider--help-echo) 43 44 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 44 45 (face (rainbow-delimiters-depth-5-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 45 47 (face font-lock-type-face fontified t cider-locals ("_" "server") help-echo cider--help-echo) 47 71 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 71 74 (face font-lock-constant-face fontified t cider-locals ("_" "server") help-echo cider--help-echo) 74 75 (face (rainbow-delimiters-depth-5-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 75 95 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 95 99 (face font-lock-type-face fontified t cider-locals ("_" "server") help-echo cider--help-echo) 99 114 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 114 133 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 133 137 (face font-lock-type-face fontified t cider-locals ("_" "server") help-echo cider--help-echo) 137 143 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 143 144 (face (rainbow-delimiters-depth-4-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 144 145 (face (rainbow-delimiters-depth-3-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 145 150 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 150 151 (face (rainbow-delimiters-depth-3-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 151 162 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 162 189 (face font-lock-string-face fontified t cider-locals ("_" "server") help-echo cider--help-echo) 189 190 (face (rainbow-delimiters-depth-3-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 190 201 (fontified t cider-locals ("_" "server") help-echo cider--help-echo) 201 202 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("_" "server") help-echo cider--help-echo) 202 203 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals ("_") help-echo cider--help-echo)) . 831) (undo-tree-id1312 . -45) (undo-tree-id1313 . -63) (undo-tree-id1314 . -64) (undo-tree-id1315 . -70) (undo-tree-id1316 . -95) (undo-tree-id1317 . -113) (undo-tree-id1318 . -133) (undo-tree-id1319 . -143) (undo-tree-id1320 . 185) (undo-tree-id1321 . 203) (undo-tree-id1322 . -1) (undo-tree-id1323 . 1) (undo-tree-id1324 . -203) (t 25762 23812 873987 209000)) nil (25762 23824 217061 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t cider-locals nil help-echo cider--help-echo)) . 831) (undo-tree-id1311 . -1)) nil (25762 23824 217056 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t cider-locals nil help-echo cider--help-echo)) . 831) (undo-tree-id1310 . -1)) nil (25762 23824 217055 0) 0 nil])
([nil nil ((#("(defn stop-server
  [server]
  (http/stop server)
  nil)" 0 1 (face (rainbow-delimiters-depth-1-face) ws-butler-chg delete fontified t cider-locals nil help-echo cider--help-echo) 1 5 (face font-lock-keyword-face fontified t cider-locals nil help-echo cider--help-echo) 5 6 (fontified t cider-locals ("server") help-echo cider--help-echo) 6 17 (face font-lock-function-name-face fontified t cider-locals ("server") help-echo cider--help-echo) 17 18 (fontified t cider-locals ("server") help-echo cider--help-echo) 18 20 (fontified t cider-locals ("server") help-echo cider--help-echo) 20 21 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("server") help-echo cider--help-echo) 21 27 (fontified t cider-locals ("server") help-echo cider--help-echo) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("server") help-echo cider--help-echo) 28 31 (fontified t cider-locals ("server") help-echo cider--help-echo) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("server") help-echo cider--help-echo) 32 36 (face font-lock-type-face fontified t cider-locals ("server") help-echo cider--help-echo) 36 48 (fontified t cider-locals ("server") help-echo cider--help-echo) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t cider-locals ("server") help-echo cider--help-echo) 49 50 (fontified t cider-locals ("server") help-echo cider--help-echo) 50 52 (fontified t cider-locals ("server") help-echo cider--help-echo) 52 55 (face font-lock-constant-face fontified t cider-locals ("server") help-echo cider--help-echo) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t cider-locals ("server") help-echo cider--help-echo)) . 831) (undo-tree-id1302 . 39) (undo-tree-id1303 . 56) (undo-tree-id1304 . -1) (undo-tree-id1305 . 1) (undo-tree-id1306 . -56) (undo-tree-id1307 . -53) (undo-tree-id1308 . -56) (undo-tree-id1309 . -56)) nil (25762 23824 217054 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t cider-locals nil help-echo cider--help-echo)) . 831) (undo-tree-id1300 . 1) (undo-tree-id1301 . -1)) nil (25762 23824 217048 0) 0 nil])
([nil nil ((#("server start-server" 0 19 (fontified t cider-locals nil help-echo cider--help-echo)) . 869) (t 25762 23824 219715 393000)) nil (25762 23839 534394 0) 0 nil])
([nil nil ((869 . 890)) nil (25762 23839 534394 0) 0 nil])
([nil nil ((890 . 898)) nil (25762 23839 534391 0) 0 nil])
([nil nil ((899 . 902) (t 25762 23839 537139 820000)) nil (25762 23849 184964 0) 0 nil])
([nil nil ((902 . 904)) nil (25762 23849 184963 0) 0 nil])
([nil nil ((903 . 911)) nil (25762 23849 184963 0) 0 nil])
([nil nil ((911 . 914)) nil (25762 23849 184962 0) 0 nil])
([nil nil ((914 . 916)) nil (25762 23849 184962 0) 0 nil])
([nil nil ((915 . 936)) nil (25762 23849 184961 0) 0 nil])
([nil nil ((936 . 940)) nil (25762 23849 184957 0) 0 nil])
([nil nil ((#("server stop-server" 0 18 (fontified t cider-locals nil help-echo cider--help-echo)) . 992) (t 25762 23849 188207 840000)) nil (25762 23866 607440 0) 0 nil])
([nil nil ((992 . 1013)) nil (25762 23866 607440 0) 0 nil])
([nil nil ((1013 . 1015)) nil (25762 23866 607439 0) 0 nil])
([nil nil ((#("=" 0 1 (ws-butler-chg chg fontified t cider-locals nil help-echo cider--help-echo)) . -1013) (undo-tree-id1325 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t cider-locals nil help-echo cider--help-echo)) . -1014) (undo-tree-id1326 . -1) 1015) nil (25762 23866 607438 0) 0 nil])
([nil nil ((1013 . 1020)) nil (25765 2897 333762 0) 0 nil])
([nil nil ((900 . 901) (t 25765 2899 53645 112000)) nil (25786 47820 708153 0) 0 nil] [nil nil ((760 . 767) (t 25762 23866 610160 778000)) ((#("#break " 0 6 (face font-lock-warning-face cider-locals ("query-string") fontified t help-echo cider--help-echo) 6 7 (cider-locals ("query-string") fontified t help-echo cider--help-echo)) . 760) (undo-tree-id1327 . -7) (undo-tree-id1328 . -7) (undo-tree-id1329 . -7) (undo-tree-id1330 . -7) (undo-tree-id1331 . -7) (undo-tree-id1332 . -7) (undo-tree-id1333 . -7) (undo-tree-id1334 . -7) (undo-tree-id1335 . -7) (undo-tree-id1336 . -7) (undo-tree-id1337 . -7) (undo-tree-id1338 . -7) (undo-tree-id1339 . -7) (undo-tree-id1340 . -7) (undo-tree-id1341 . -7) (undo-tree-id1342 . -7) (undo-tree-id1343 . -7) (undo-tree-id1344 . -7) (undo-tree-id1345 . -7) (undo-tree-id1346 . -7) (undo-tree-id1347 . -7) (undo-tree-id1348 . -7) (undo-tree-id1349 . -7) (undo-tree-id1350 . -7) (undo-tree-id1351 . -7) (undo-tree-id1352 . -7) (undo-tree-id1353 . -7) (undo-tree-id1354 . -7) (undo-tree-id1355 . -7) (undo-tree-id1356 . -7) (undo-tree-id1357 . -7) (undo-tree-id1358 . -7) (undo-tree-id1359 . -7) (undo-tree-id1360 . -7) (undo-tree-id1361 . -7) (undo-tree-id1362 . -7) (undo-tree-id1363 . -7) (undo-tree-id1364 . -7) (undo-tree-id1365 . -7) (undo-tree-id1366 . -7) (undo-tree-id1367 . -7) (undo-tree-id1368 . -7) (undo-tree-id1369 . -7) (undo-tree-id1370 . -7) (undo-tree-id1371 . -7) (undo-tree-id1372 . -7) (undo-tree-id1373 . -7) (undo-tree-id1374 . -7) (undo-tree-id1375 . -7) (undo-tree-id1376 . -7) (undo-tree-id1377 . -7) (undo-tree-id1378 . -7) (undo-tree-id1379 . -7) (undo-tree-id1380 . -7) (undo-tree-id1381 . -7) (undo-tree-id1382 . -7) (undo-tree-id1383 . -7) (undo-tree-id1384 . -7) (undo-tree-id1385 . -7) (undo-tree-id1386 . -7) (undo-tree-id1387 . -7) (undo-tree-id1388 . -7) (undo-tree-id1389 . -7) (undo-tree-id1390 . -7) (undo-tree-id1391 . -7) (undo-tree-id1392 . -7) (undo-tree-id1393 . -7) (undo-tree-id1394 . -7) (undo-tree-id1395 . -7) (undo-tree-id1396 . -7) (undo-tree-id1397 . -7) (undo-tree-id1398 . -7) (undo-tree-id1399 . -7) (undo-tree-id1400 . -7) (undo-tree-id1401 . -7) (undo-tree-id1402 . -7) (undo-tree-id1403 . -7) (undo-tree-id1404 . -7) (undo-tree-id1405 . -7) (undo-tree-id1406 . -7) (undo-tree-id1407 . -7) (undo-tree-id1408 . -7) (undo-tree-id1409 . -7) (undo-tree-id1410 . -7) (undo-tree-id1411 . -7) (undo-tree-id1412 . -7) (undo-tree-id1413 . -7) (undo-tree-id1414 . -7) (undo-tree-id1415 . -7) (undo-tree-id1416 . -7) (undo-tree-id1417 . -7) (undo-tree-id1418 . -7) (undo-tree-id1419 . -7) (undo-tree-id1420 . -7) (undo-tree-id1421 . -7) (undo-tree-id1422 . -7) (undo-tree-id1423 . -7) (undo-tree-id1424 . -7) (undo-tree-id1425 . -7) (undo-tree-id1426 . -7) (undo-tree-id1427 . -7) (undo-tree-id1428 . -7) (undo-tree-id1429 . -7) (undo-tree-id1430 . -7) (undo-tree-id1431 . -7) (undo-tree-id1432 . -7) (undo-tree-id1433 . -7) (undo-tree-id1434 . -7) (undo-tree-id1435 . -7) (undo-tree-id1436 . -7) (undo-tree-id1437 . -7) (undo-tree-id1438 . -7) (undo-tree-id1439 . -7) (undo-tree-id1440 . -7) (undo-tree-id1441 . -7) (undo-tree-id1442 . -7) (undo-tree-id1443 . -7) (undo-tree-id1444 . -7) (undo-tree-id1445 . -7) (undo-tree-id1446 . -7) (undo-tree-id1447 . -7) (undo-tree-id1448 . -7) (t 25765 2887 173531 136000)) (25765 2887 168354 0) 0 nil])
([nil nil ((901 . 902)) nil (25786 47820 708150 0) 0 nil])
nil
([nil nil ((109 . 110) (t 25786 47820 713491 944000)) nil (25786 48555 580588 0) 0 nil])
([nil nil ((110 . 111)) nil (25786 48555 580585 0) 0 nil])
([nil nil ((1038 . 1039) (t 25786 48555 586459 585000)) nil (25893 24674 36154 0) 0 nil])
([nil nil ((1039 . 1041)) nil (25893 24674 36152 0) 0 nil])
([nil nil ((1040 . 1042)) nil (25893 24674 36152 0) 0 nil])
([nil nil ((#("," 0 1 (cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t)) . -1041) (undo-tree-id2 . -1) 1042) nil (25893 24674 36150 0) 0 nil])
([nil nil ((1041 . 1062)) nil (25893 24674 36148 0) 0 nil])
([nil nil ((1062 . 1065)) nil (25893 24674 36148 0) 0 nil])
([nil nil ((#("q" 0 1 (cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t)) . -1063) (undo-tree-id0 . -1) (#("=" 0 1 (cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t)) . -1064) (undo-tree-id1 . -1) 1065) nil (25893 24674 36146 0) 0 nil])
([nil nil ((1063 . 1065)) nil (25893 24674 36123 0) 0 nil])
([nil nil ((1064 . 1077)) nil (25893 24674 36121 0) 0 nil])
([nil nil ((1078 . 1079)) nil (25893 24674 36121 0) 0 nil])
([nil nil ((1079 . 1081)) nil (25893 24674 36120 0) 0 nil])
([nil nil ((1080 . 1082)) nil (25893 24674 36118 0) 0 nil])
([nil nil ((1084 . 1085) 1082) nil (25893 24674 36115 0) 0 nil])
([nil nil ((#("!" 0 1 (cider-locals ("m" "node") help-echo cider--help-echo fontified t)) . -1060) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 1061 (t 25893 24674 45991 511000)) nil (25893 24772 350782 0) 0 nil])
([nil nil ((1084 . 1085) (1039 . 1040)) nil (25893 24772 350779 0) 0 nil])
([nil nil ((1040 . 1061)) nil (25893 24772 350778 0) 0 nil])
([nil nil ((1061 . 1062)) nil (25893 24772 350777 0) 0 nil])
([nil nil ((#("async" 0 5 (face font-lock-type-face cider-locals ("m" "node") help-echo cider--help-echo fontified t)) . -1076) (undo-tree-id46 . -4) (undo-tree-id47 . -5) 1081) nil (25893 24772 350776 0) 0 nil])
([nil nil ((#("core." 0 5 (face font-lock-type-face cider-locals ("m" "node") help-echo cider--help-echo fontified t)) . -1071) (undo-tree-id44 . -5) (undo-tree-id45 . -5) 1076) nil (25893 24772 350773 0) 0 nil])
([nil nil ((#("clojure." 0 8 (face font-lock-type-face cider-locals ("m" "node") help-echo cider--help-echo fontified t)) . -1063) (undo-tree-id42 . -8) (undo-tree-id43 . -8) 1071) nil (25893 24772 350769 0) 0 nil])
([nil nil ((#("/" 0 1 (cider-locals ("m" "node") ws-butler-chg delete help-echo cider--help-echo fontified t)) . 1063)) nil (25893 24772 350767 0) 0 nil])
([nil nil ((#("async/" 0 5 (face font-lock-type-face cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t) 5 6 (cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t)) . -1053) (undo-tree-id41 . -6) 1059) nil (25893 24772 350766 0) 0 nil])
([nil nil ((#("core." 0 5 (cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t)) . -1048) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) 1053) nil (25893 24772 350763 0) 0 nil])
([nil nil ((#("clojure." 0 8 (cider-locals ("m" "node") help-echo cider--help-echo ws-butler-chg chg fontified t)) . -1040) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) 1048) nil (25893 24785 505094 0) 0 nil])
([nil nil ((215 . 219) (t 25893 24772 359691 752000)) nil (25893 24805 861574 0) 0 nil] [nil nil ((110 . 113) (1 . 2) (t 25893 24772 359691 752000)) ((#("
" 0 1 (cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . 1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("   " 0 3 (cider-locals nil fontified t ws-butler-chg chg help-echo cider--help-echo)) . 110)) (25893 24785 504329 0) 0 nil])
([nil nil ((219 . 221)) nil (25893 24805 861573 0) 0 nil])
nil
([nil nil ((220 . 240)) nil (25893 24805 861571 0) 0 nil])
([nil nil ((#(":" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -238) (undo-tree-id54 . -1) (#(" " 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -239) (undo-tree-id55 . -1) 240) nil (25893 24805 861570 0) 0 nil])
([nil nil ((238 . 246)) nil (25893 24805 861567 0) 0 nil])
([nil nil ((246 . 248)) nil (25893 24805 861566 0) 0 nil])
([nil nil ((247 . 248)) nil (25893 24805 861565 0) 0 nil])
([nil nil ((#("!" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -247) (undo-tree-id53 . -1) 248) nil (25893 24805 861564 0) 0 nil])
([nil nil ((247 . 248)) nil (25893 24805 861562 0) 0 nil])
([nil nil ((248 . 264)) nil (25893 24805 861561 0) 0 nil])
([nil nil ((#(" " 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo ws-butler-chg chg fontified t)) . -263) (undo-tree-id52 . -1) 264) nil (25893 25706 817564 0) 0 nil])
([nil nil ((1095 . 1096) (t 25893 24805 869554 713000)) nil (25893 25742 177232 0) 0 nil] [nil nil ((1095 . 1096) (t 25893 24805 869554 713000)) ((#("!" 0 1 (cider-locals ("m" "node") ws-butler-chg chg fontified t help-echo cider--help-echo)) . 1095)) (25893 25706 817021 0) 0 nil])
([nil nil ((#("go " 0 1 (face font-lock-keyword-face cider-locals ("m" "node") fontified t help-echo cider--help-echo) 1 2 (face font-lock-keyword-face cider-locals ("m" "node") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("m" "node") fontified t help-echo cider--help-echo)) . -1090) (undo-tree-id64 . -3) 1093) nil (25893 25742 177230 0) 0 nil])
nil
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) cider-locals ("m" "node") fontified nil help-echo cider--help-echo)) . -1089) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) cider-locals ("m" "node") fontified t help-echo cider--help-echo)) . -1116) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 1090) nil (25893 25742 177225 0) 0 nil])
([nil nil ((#("(>!! (:queue system) \"hi\")" 0 1 (face (rainbow-delimiters-depth-1-face) cider-locals ("m" "node") fontified t help-echo cider--help-echo) 1 2 (cider-locals ("m" "node") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("m" "node") fontified t help-echo cider--help-echo) 3 4 (cider-locals ("m" "node") fontified t help-echo cider--help-echo) 4 5 (cider-locals ("m" "node") fontified t help-echo cider--help-echo) 5 6 (face (rainbow-delimiters-depth-2-face) cider-locals ("m" "node") fontified t help-echo cider--help-echo) 6 7 (face clojure-keyword-face cider-locals ("m" "node") fontified t help-echo cider--help-echo) 7 12 (face clojure-keyword-face cider-locals ("m" "node") fontified t help-echo cider--help-echo) 12 19 (cider-locals ("m" "node") fontified t help-echo cider--help-echo) 19 20 (face (rainbow-delimiters-depth-2-face) cider-locals ("m" "node") fontified t help-echo cider--help-echo) 20 21 (cider-locals ("m" "node") fontified t help-echo cider--help-echo) 21 24 (face font-lock-string-face cider-locals ("m" "node") fontified t help-echo cider--help-echo) 24 25 (face font-lock-string-face cider-locals ("m" "node") fontified t help-echo cider--help-echo) 25 26 (face (rainbow-delimiters-depth-1-face) cider-locals ("m" "node") fontified t help-echo cider--help-echo)) . 1089) (undo-tree-id213 . -26) (undo-tree-id214 . -26) (undo-tree-id215 . -2) (undo-tree-id216 . -26) (undo-tree-id217 . -1) (undo-tree-id218 . -26) (undo-tree-id219 . -26) (undo-tree-id220 . -26) (undo-tree-id221 . -2) (undo-tree-id222 . -26) (undo-tree-id223 . -26) (undo-tree-id224 . -26) (undo-tree-id225 . -26) (undo-tree-id226 . -26) (undo-tree-id227 . -26) (undo-tree-id228 . -26) (undo-tree-id229 . -26) (undo-tree-id230 . -26) (undo-tree-id231 . -26) (undo-tree-id232 . -26) (undo-tree-id233 . -26) (undo-tree-id234 . -26) (undo-tree-id235 . -26) (undo-tree-id236 . -26) (undo-tree-id237 . -26) (undo-tree-id238 . -26) (undo-tree-id239 . -26) (undo-tree-id240 . -26) (undo-tree-id241 . -26) (undo-tree-id242 . -26) (undo-tree-id243 . -26) (undo-tree-id244 . -26) (undo-tree-id245 . -26) (undo-tree-id246 . -26) (undo-tree-id247 . -26) (undo-tree-id248 . -26) (undo-tree-id249 . -26) (undo-tree-id250 . -26) (undo-tree-id251 . -26) (undo-tree-id252 . -26) (undo-tree-id253 . -26) (undo-tree-id254 . -26) (undo-tree-id255 . -26) (undo-tree-id256 . -26) (undo-tree-id257 . -26) (undo-tree-id258 . -26) (undo-tree-id259 . -26) (undo-tree-id260 . -26) (undo-tree-id261 . -26) (undo-tree-id262 . -26) (undo-tree-id263 . -26) (undo-tree-id264 . -26) (undo-tree-id265 . -26) (undo-tree-id266 . -26) (undo-tree-id267 . -26) (undo-tree-id268 . -26) (undo-tree-id269 . -26) (undo-tree-id270 . -26) (undo-tree-id271 . -26) (undo-tree-id272 . -26) (undo-tree-id273 . -26) (undo-tree-id274 . -26) (undo-tree-id275 . -26) (undo-tree-id276 . -26) (undo-tree-id277 . -26) (undo-tree-id278 . -26) (undo-tree-id279 . -26) (undo-tree-id280 . -26) (undo-tree-id281 . -26) (undo-tree-id282 . -26) (undo-tree-id283 . -26) (undo-tree-id284 . -26) (undo-tree-id285 . -26) (t 25893 25742 187433 735000)) nil (25893 25768 687610 0) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals ("m" "node") fontified t help-echo cider--help-echo)) . -1088) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 1089) nil (25893 25768 687535 0) 0 nil])
([nil current ((#("
" 0 1 (cider-locals ("m" "node") ws-butler-chg delete fontified t help-echo cider--help-echo)) . 1088) (1089 . 1089) 1088) nil (25893 25768 687389 0) 0 nil])
nil
